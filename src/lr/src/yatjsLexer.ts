// Generated from ./src/yatjs.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class yatjsLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly OP = 17;
	public static readonly ID = 18;
	public static readonly NUMBER = 19;
	public static readonly LINE_COMMENT = 20;
	public static readonly COMMENT = 21;
	public static readonly WS = 22;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "OP", "ID", 
		"NUMBER", "LINE_COMMENT", "COMMENT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'const'", "'='", "','", "'return'", "'('", "')'", "'*'", 
		"'/'", "'+'", "'-'", "'?'", "':'", "'=>'", "'{'", "'}'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "OP", "ID", "NUMBER", "LINE_COMMENT", 
		"COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(yatjsLexer._LITERAL_NAMES, yatjsLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return yatjsLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(yatjsLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "yatjs.g4"; }

	// @Override
	public get ruleNames(): string[] { return yatjsLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return yatjsLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return yatjsLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return yatjsLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x18\x97\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x06\x13]\n\x13" +
		"\r\x13\x0E\x13^\x03\x14\x03\x14\x07\x14c\n\x14\f\x14\x0E\x14f\v\x14\x03" +
		"\x14\x03\x14\x06\x14j\n\x14\r\x14\x0E\x14k\x03\x14\x03\x14\x06\x14p\n" +
		"\x14\r\x14\x0E\x14q\x05\x14t\n\x14\x03\x15\x03\x15\x03\x15\x03\x15\x07" +
		"\x15z\n\x15\f\x15\x0E\x15}\v\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x07\x16\x87\n\x16\f\x16\x0E\x16\x8A\v\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x06\x17\x92\n\x17\r\x17\x0E" +
		"\x17\x93\x03\x17\x03\x17\x04{\x88\x02\x02\x18\x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
		"\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18\x03\x02" +
		"\t\x05\x02,-//11\x04\x02C\\aa\x03\x023;\x03\x022;\x03\x0222\x03\x0200" +
		"\x05\x02\v\f\x0F\x0F\"\"\x02\x9F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x03/\x03\x02\x02\x02\x051\x03\x02" +
		"\x02\x02\x077\x03\x02\x02\x02\t9\x03\x02\x02\x02\v;\x03\x02\x02\x02\r" +
		"B\x03\x02\x02\x02\x0FD\x03\x02\x02\x02\x11F\x03\x02\x02\x02\x13H\x03\x02" +
		"\x02\x02\x15J\x03\x02\x02\x02\x17L\x03\x02\x02\x02\x19N\x03\x02\x02\x02" +
		"\x1BP\x03\x02\x02\x02\x1DR\x03\x02\x02\x02\x1FU\x03\x02\x02\x02!W\x03" +
		"\x02\x02\x02#Y\x03\x02\x02\x02%\\\x03\x02\x02\x02\'s\x03\x02\x02\x02)" +
		"u\x03\x02\x02\x02+\x82\x03\x02\x02\x02-\x91\x03\x02\x02\x02/0\x07=\x02" +
		"\x020\x04\x03\x02\x02\x0212\x07e\x02\x0223\x07q\x02\x0234\x07p\x02\x02" +
		"45\x07u\x02\x0256\x07v\x02\x026\x06\x03\x02\x02\x0278\x07?\x02\x028\b" +
		"\x03\x02\x02\x029:\x07.\x02\x02:\n\x03\x02\x02\x02;<\x07t\x02\x02<=\x07" +
		"g\x02\x02=>\x07v\x02\x02>?\x07w\x02\x02?@\x07t\x02\x02@A\x07p\x02\x02" +
		"A\f\x03\x02\x02\x02BC\x07*\x02\x02C\x0E\x03\x02\x02\x02DE\x07+\x02\x02" +
		"E\x10\x03\x02\x02\x02FG\x07,\x02\x02G\x12\x03\x02\x02\x02HI\x071\x02\x02" +
		"I\x14\x03\x02\x02\x02JK\x07-\x02\x02K\x16\x03\x02\x02\x02LM\x07/\x02\x02" +
		"M\x18\x03\x02\x02\x02NO\x07A\x02\x02O\x1A\x03\x02\x02\x02PQ\x07<\x02\x02" +
		"Q\x1C\x03\x02\x02\x02RS\x07?\x02\x02ST\x07@\x02\x02T\x1E\x03\x02\x02\x02" +
		"UV\x07}\x02\x02V \x03\x02\x02\x02WX\x07\x7F\x02\x02X\"\x03\x02\x02\x02" +
		"YZ\t\x02\x02\x02Z$\x03\x02\x02\x02[]\t\x03\x02\x02\\[\x03\x02\x02\x02" +
		"]^\x03\x02\x02\x02^\\\x03\x02\x02\x02^_\x03\x02\x02\x02_&\x03\x02\x02" +
		"\x02`d\t\x04\x02\x02ac\t\x05\x02\x02ba\x03\x02\x02\x02cf\x03\x02\x02\x02" +
		"db\x03\x02\x02\x02de\x03\x02\x02\x02et\x03\x02\x02\x02fd\x03\x02\x02\x02" +
		"gt\t\x06\x02\x02hj\t\x05\x02\x02ih\x03\x02\x02\x02jk\x03\x02\x02\x02k" +
		"i\x03\x02\x02\x02kl\x03\x02\x02\x02lm\x03\x02\x02\x02mo\t\x07\x02\x02" +
		"np\t\x05\x02\x02on\x03\x02\x02\x02pq\x03\x02\x02\x02qo\x03\x02\x02\x02" +
		"qr\x03\x02\x02\x02rt\x03\x02\x02\x02s`\x03\x02\x02\x02sg\x03\x02\x02\x02" +
		"si\x03\x02\x02\x02t(\x03\x02\x02\x02uv\x071\x02\x02vw\x071\x02\x02w{\x03" +
		"\x02\x02\x02xz\v\x02\x02\x02yx\x03\x02\x02\x02z}\x03\x02\x02\x02{|\x03" +
		"\x02\x02\x02{y\x03\x02\x02\x02|~\x03\x02\x02\x02}{\x03\x02\x02\x02~\x7F" +
		"\x07\f\x02\x02\x7F\x80\x03\x02\x02\x02\x80\x81\b\x15\x02\x02\x81*\x03" +
		"\x02\x02\x02\x82\x83\x071\x02\x02\x83\x84\x07,\x02\x02\x84\x88\x03\x02" +
		"\x02\x02\x85\x87\v\x02\x02\x02\x86\x85\x03\x02\x02\x02\x87\x8A\x03\x02" +
		"\x02\x02\x88\x89\x03\x02\x02\x02\x88\x86\x03\x02\x02\x02\x89\x8B\x03\x02" +
		"\x02\x02\x8A\x88\x03\x02\x02\x02\x8B\x8C\x07,\x02\x02\x8C\x8D\x071\x02" +
		"\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8F\b\x16\x02\x02\x8F,\x03\x02\x02\x02" +
		"\x90\x92\t\b\x02\x02\x91\x90\x03\x02\x02\x02\x92\x93\x03\x02\x02\x02\x93" +
		"\x91\x03\x02\x02\x02\x93\x94\x03\x02\x02\x02\x94\x95\x03\x02\x02\x02\x95" +
		"\x96\b\x17\x02\x02\x96.\x03\x02\x02\x02\v\x02^dkqs{\x88\x93\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!yatjsLexer.__ATN) {
			yatjsLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(yatjsLexer._serializedATN));
		}

		return yatjsLexer.__ATN;
	}

}

