// Generated from ./src/yatjs.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class yatjsLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly OP = 13;
	public static readonly ID = 14;
	public static readonly NUMBER = 15;
	public static readonly LINE_COMMENT = 16;
	public static readonly COMMENT = 17;
	public static readonly WS = 18;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "OP", "ID", "NUMBER", "LINE_COMMENT", "COMMENT", 
		"WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'const'", "'='", "','", "'return'", "'?'", "':'", "'('", 
		"')'", "'=>'", "'{'", "'}'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "OP", 
		"ID", "NUMBER", "LINE_COMMENT", "COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(yatjsLexer._LITERAL_NAMES, yatjsLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return yatjsLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(yatjsLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "yatjs.g4"; }

	// @Override
	public get ruleNames(): string[] { return yatjsLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return yatjsLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return yatjsLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return yatjsLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x14\x87\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
		"\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0F\x06\x0FM\n\x0F\r\x0F\x0E\x0FN\x03\x10\x03\x10\x07\x10S\n\x10\f\x10" +
		"\x0E\x10V\v\x10\x03\x10\x03\x10\x06\x10Z\n\x10\r\x10\x0E\x10[\x03\x10" +
		"\x03\x10\x06\x10`\n\x10\r\x10\x0E\x10a\x05\x10d\n\x10\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x07\x11j\n\x11\f\x11\x0E\x11m\v\x11\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x07\x12w\n\x12\f\x12\x0E" +
		"\x12z\v\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x06\x13\x82" +
		"\n\x13\r\x13\x0E\x13\x83\x03\x13\x03\x13\x04kx\x02\x02\x14\x03\x02\x03" +
		"\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02" +
		"\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F" +
		"\x02\x11!\x02\x12#\x02\x13%\x02\x14\x03\x02\t\x05\x02,-//11\x04\x02C\\" +
		"aa\x03\x023;\x03\x022;\x03\x0222\x03\x0200\x05\x02\v\f\x0F\x0F\"\"\x02" +
		"\x8F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02" +
		"\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02" +
		"\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02" +
		"\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02" +
		"\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02" +
		"\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x03\'" +
		"\x03\x02\x02\x02\x05)\x03\x02\x02\x02\x07/\x03\x02\x02\x02\t1\x03\x02" +
		"\x02\x02\v3\x03\x02\x02\x02\r:\x03\x02\x02\x02\x0F<\x03\x02\x02\x02\x11" +
		">\x03\x02\x02\x02\x13@\x03\x02\x02\x02\x15B\x03\x02\x02\x02\x17E\x03\x02" +
		"\x02\x02\x19G\x03\x02\x02\x02\x1BI\x03\x02\x02\x02\x1DL\x03\x02\x02\x02" +
		"\x1Fc\x03\x02\x02\x02!e\x03\x02\x02\x02#r\x03\x02\x02\x02%\x81\x03\x02" +
		"\x02\x02\'(\x07=\x02\x02(\x04\x03\x02\x02\x02)*\x07e\x02\x02*+\x07q\x02" +
		"\x02+,\x07p\x02\x02,-\x07u\x02\x02-.\x07v\x02\x02.\x06\x03\x02\x02\x02" +
		"/0\x07?\x02\x020\b\x03\x02\x02\x0212\x07.\x02\x022\n\x03\x02\x02\x023" +
		"4\x07t\x02\x0245\x07g\x02\x0256\x07v\x02\x0267\x07w\x02\x0278\x07t\x02" +
		"\x0289\x07p\x02\x029\f\x03\x02\x02\x02:;\x07A\x02\x02;\x0E\x03\x02\x02" +
		"\x02<=\x07<\x02\x02=\x10\x03\x02\x02\x02>?\x07*\x02\x02?\x12\x03\x02\x02" +
		"\x02@A\x07+\x02\x02A\x14\x03\x02\x02\x02BC\x07?\x02\x02CD\x07@\x02\x02" +
		"D\x16\x03\x02\x02\x02EF\x07}\x02\x02F\x18\x03\x02\x02\x02GH\x07\x7F\x02" +
		"\x02H\x1A\x03\x02\x02\x02IJ\t\x02\x02\x02J\x1C\x03\x02\x02\x02KM\t\x03" +
		"\x02\x02LK\x03\x02\x02\x02MN\x03\x02\x02\x02NL\x03\x02\x02\x02NO\x03\x02" +
		"\x02\x02O\x1E\x03\x02\x02\x02PT\t\x04\x02\x02QS\t\x05\x02\x02RQ\x03\x02" +
		"\x02\x02SV\x03\x02\x02\x02TR\x03\x02\x02\x02TU\x03\x02\x02\x02Ud\x03\x02" +
		"\x02\x02VT\x03\x02\x02\x02Wd\t\x06\x02\x02XZ\t\x05\x02\x02YX\x03\x02\x02" +
		"\x02Z[\x03\x02\x02\x02[Y\x03\x02\x02\x02[\\\x03\x02\x02\x02\\]\x03\x02" +
		"\x02\x02]_\t\x07\x02\x02^`\t\x05\x02\x02_^\x03\x02\x02\x02`a\x03\x02\x02" +
		"\x02a_\x03\x02\x02\x02ab\x03\x02\x02\x02bd\x03\x02\x02\x02cP\x03\x02\x02" +
		"\x02cW\x03\x02\x02\x02cY\x03\x02\x02\x02d \x03\x02\x02\x02ef\x071\x02" +
		"\x02fg\x071\x02\x02gk\x03\x02\x02\x02hj\v\x02\x02\x02ih\x03\x02\x02\x02" +
		"jm\x03\x02\x02\x02kl\x03\x02\x02\x02ki\x03\x02\x02\x02ln\x03\x02\x02\x02" +
		"mk\x03\x02\x02\x02no\x07\f\x02\x02op\x03\x02\x02\x02pq\b\x11\x02\x02q" +
		"\"\x03\x02\x02\x02rs\x071\x02\x02st\x07,\x02\x02tx\x03\x02\x02\x02uw\v" +
		"\x02\x02\x02vu\x03\x02\x02\x02wz\x03\x02\x02\x02xy\x03\x02\x02\x02xv\x03" +
		"\x02\x02\x02y{\x03\x02\x02\x02zx\x03\x02\x02\x02{|\x07,\x02\x02|}\x07" +
		"1\x02\x02}~\x03\x02\x02\x02~\x7F\b\x12\x02\x02\x7F$\x03\x02\x02\x02\x80" +
		"\x82\t\b\x02\x02\x81\x80\x03\x02\x02\x02\x82\x83\x03\x02\x02\x02\x83\x81" +
		"\x03\x02\x02\x02\x83\x84\x03\x02\x02\x02\x84\x85\x03\x02\x02\x02\x85\x86" +
		"\b\x13\x02\x02\x86&\x03\x02\x02\x02\v\x02NT[ackx\x83\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!yatjsLexer.__ATN) {
			yatjsLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(yatjsLexer._serializedATN));
		}

		return yatjsLexer.__ATN;
	}

}

